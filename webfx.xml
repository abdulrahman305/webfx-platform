<?xml version="1.0" encoding="UTF-8"?>
<project>

    <update-options>
        <generate-export-snapshot/>
    </update-options>

    <modules>
        <subdirectories-modules/>
    </modules>

    <maven-pom-manual>
        <properties>
            <!-- Disabling the default behavior defined in the parent pom for the shade plugin -->
            <plugin.shade.param.fat.phase>none</plugin.shade.param.fat.phase>
        </properties>

        <build>
            <pluginManagement>
                <plugins>
                    <!-- Relocating the emul.java package to java for both classes and sources -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <shadedArtifactAttached>true</shadedArtifactAttached>
                                    <filters>
                                        <filter>
                                            <artifact>*:*</artifact>
                                            <includes>
                                                <include>emul/java/**</include>
                                                <include>public/**</include>
                                                <include>META-INF/maven/**</include>
                                            </includes>
                                        </filter>
                                    </filters>
                                    <relocations>
                                        <relocation>
                                            <pattern>emul.java</pattern>
                                            <shadedPattern>java</shadedPattern>
                                        </relocation>
                                    </relocations>
                                    <createSourcesJar>true</createSourcesJar>
                                    <shadeSourcesContent>true</shadeSourcesContent>
                                    <createDependencyReducedPom>false</createDependencyReducedPom>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </pluginManagement>
        </build>
    </maven-pom-manual>

    <required-libraries>

        <group>
            <groupId>dev.webfx</groupId>
            <version>0.1.0-SNAPSHOT</version>

            <webfx-library name="webfx-parent"/>
            <webfx-library name="webfx-lib-javacupruntime"/>
        </group>


        <group>
            <groupId>org.gwtproject</groupId>

            <library name="gwt-user">
                <exported-packages>
                    <package>com.google.gwt.core.client</package>
                    <package>com.google.gwt.dom.client</package>
                    <package>com.google.gwt.media.client</package>
                    <package>com.google.gwt.regexp.shared</package>
                    <package>com.google.gwt.resources.client</package>
                    <package>com.google.gwt.storage.client</package>
                    <package>com.google.gwt.user.client</package>
                    <package>com.google.gwt.user.client.ui</package>
                </exported-packages>
            </library>

            <library name="gwt-dev"/>
        </group>

        <group>
            <groupId>com.google.elemental2</groupId>

            <library name="elemental2-core">
                <exported-packages>
                    <package>elemental2.core</package>
                </exported-packages>
            </library>

            <library name="elemental2-dom">
                <exported-packages>
                    <package>elemental2.dom</package>
                </exported-packages>
            </library>

            <library name="elemental2-svg">
                <exported-packages>
                    <package>elemental2.svg</package>
                </exported-packages>
            </library>

            <library name="elemental2-media">
                <exported-packages>
                    <package>elemental2.media</package>
                </exported-packages>
            </library>

            <library name="elemental2-promise">
                <exported-packages>
                    <package>elemental2.promise</package>
                </exported-packages>
            </library>

        </group>

        <group>
            <groupId>org.jresearch.gwt.time</groupId>

            <library name="gwt-time">
                <artifactId>org.jresearch.gwt.time</artifactId>
            </library>

            <library name="org.jresearch.gwt.time.tzdb"/>

        </group>

        <library name="java-nio-emul">
            <groupId>org.treblereel.gwt.nio</groupId>
            <artifactId>gwt-nio</artifactId>
            <version>1.1</version>
            <exported-packages>
                <package>java.nio</package>
                <package>java.nio.charset</package>
                <package>java.nio.file</package>
                <package>java.nio.file.attribute</package>
            </exported-packages>
        </library>

        <library name="jsinterop-annotations">
            <exported-packages>
                <package>jsinterop.annotations</package>
            </exported-packages>
        </library>

        <library name="jsinterop-base">
            <exported-packages>
                <package>jsinterop.base</package>
            </exported-packages>
        </library>

        <library name="com-zaxxer-hikari">
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <exported-packages>
                <package>com.zaxxer.hikari</package>
            </exported-packages>
        </library>

        <library name="Java-WebSocket">
            <groupId>org.java-websocket</groupId>
            <exported-packages>
                <package>org.java_websocket</package>
                <package>org.java_websocket.client</package>
                <package>org.java_websocket.drafts</package>
                <package>org.java_websocket.enums</package>
                <package>org.java_websocket.handshake</package>
            </exported-packages>
        </library>

        <group>
            <groupId>org.teavm</groupId>

            <library name="teavm-interop">
                <exported-packages>
                    <package>org.teavm.interop</package>
                </exported-packages>
            </library>

            <library name="teavm-jso">
                <exported-packages>
                    <package>org.teavm.jso</package>
                </exported-packages>
            </library>

            <library name="teavm-jso-apis">
                <exported-packages>
                    <package>org.teavm.jso.core</package>
                    <package>org.teavm.jso.dom.events</package>
                    <package>org.teavm.jso.typedarrays</package>
                </exported-packages>
            </library>

        </group>

        <group>
            <groupId>com.gluonhq.attach</groupId>

            <library artifactId="audio" name="com.gluonhq.attach.audio">
                <exported-packages>
                    <package>com.gluonhq.attach.audio</package>
                </exported-packages>
            </library>

            <library artifactId="lifecycle" name="com.gluonhq.attach.lifecycle">
                <exported-packages>
                    <package>com.gluonhq.attach.lifecycle</package>
                </exported-packages>
            </library>

            <library artifactId="storage" name="com.gluonhq.attach.storage">
                <exported-packages>
                    <package>com.gluonhq.attach.storage</package>
                </exported-packages>
            </library>

            <library artifactId="util" name="com.gluonhq.attach.util">
                <exported-packages>
                    <package>com.gluonhq.attach.util</package>
                </exported-packages>
            </library>

        </group>

        <group>
            <groupId>io.vertx</groupId>

            <library name="io-vertx-core">
                <artifactId>vertx-core</artifactId>
                <exported-packages>
                    <package>io.vertx.core</package>
                    <package>io.vertx.core.eventbus</package>
                    <package>io.vertx.core.eventbus.impl</package>
                    <package>io.vertx.core.http</package>
                    <package>io.vertx.core.http.impl.headers</package>
                    <package>io.vertx.core.json</package>
                    <package>io.vertx.core.net</package>
                    <package>io.vertx.core.spi.cluster</package>
                </exported-packages>
            </library>

            <library name="io-vertx-eventbusbridge-common">
                <artifactId>vertx-bridge-common</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.bridge</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-jdbc">
                <artifactId>vertx-jdbc-client</artifactId>
                <exported-packages>
                    <package>io.vertx.jdbcclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql">
                <artifactId>vertx-sql-client</artifactId>
                <exported-packages>
                    <package>io.vertx.sqlclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql-pg">
                <artifactId>vertx-pg-client</artifactId>
                <exported-packages>
                    <package>io.vertx.pgclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-web">
                <artifactId>vertx-web</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.web</package>
                    <package>io.vertx.ext.web.handler</package>
                    <package>io.vertx.ext.web.handler.sockjs</package>
                    <package>io.vertx.ext.web.sstore</package>
                </exported-packages>
            </library>

        </group>

        <!-- Additional library required at runtime when authenticating to a postgres database in a docker container -->
        <library name="com-ongres-scram-client">
            <artifactId>client</artifactId>
            <groupId>com.ongres.scram</groupId>
        </library>

    </required-libraries>

</project>