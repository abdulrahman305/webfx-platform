<?xml version="1.0" encoding="UTF-8"?>
<project>

    <update-options>
        <generate-export-snapshot/>
    </update-options>

    <modules>
        <subdirectories-modules/>
    </modules>

    <maven-pom-manual>
        <properties>
            <!-- Disabling the default behavior defined in the parent pom for the shade plugin -->
            <plugin.shade.param.fat.phase>none</plugin.shade.param.fat.phase>
        </properties>

        <build>
            <pluginManagement>
                <plugins>
                    <!-- Relocating the emul.java package to java for both classes and sources -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <shadedArtifactAttached>true</shadedArtifactAttached>
                                    <filters>
                                        <filter>
                                            <artifact>*:*</artifact>
                                            <includes>
                                                <include>emul/java/**</include>
                                                <include>public/**</include>
                                                <include>META-INF/maven/**</include>
                                            </includes>
                                        </filter>
                                    </filters>
                                    <relocations>
                                        <relocation>
                                            <pattern>emul.java</pattern>
                                            <shadedPattern>java</shadedPattern>
                                        </relocation>
                                    </relocations>
                                    <createSourcesJar>true</createSourcesJar>
                                    <shadeSourcesContent>true</shadeSourcesContent>
                                    <createDependencyReducedPom>false</createDependencyReducedPom>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </pluginManagement>
        </build>
    </maven-pom-manual>

    <required-libraries>

        <group>
            <groupId>dev.webfx</groupId>
            <version>0.1.0-SNAPSHOT</version>

            <webfx-library name="webfx-parent"/>
            <webfx-library name="webfx-lib-javacupruntime"/>
        </group>


        <group>
            <groupId>org.gwtproject</groupId>

            <library name="gwt-user">
                <exported-packages>
                    <package>com.google.gwt.core.client</package>
                    <package>com.google.gwt.dom.client</package>
                    <package>com.google.gwt.media.client</package>
                    <package>com.google.gwt.regexp.shared</package>
                    <package>com.google.gwt.resources.client</package>
                    <package>com.google.gwt.storage.client</package>
                    <package>com.google.gwt.user.client</package>
                    <package>com.google.gwt.user.client.ui</package>
                </exported-packages>
            </library>

            <library name="gwt-dev"/>
        </group>

        <group>
            <groupId>com.google.elemental2</groupId>

            <library name="elemental2-core">
                <exported-packages>
                    <package>elemental2.core</package>
                </exported-packages>
            </library>

            <library name="elemental2-dom">
                <exported-packages>
                    <package>elemental2.dom</package>
                </exported-packages>
            </library>

            <library name="elemental2-svg">
                <exported-packages>
                    <package>elemental2.svg</package>
                </exported-packages>
            </library>

            <library name="elemental2-media">
                <exported-packages>
                    <package>elemental2.media</package>
                </exported-packages>
            </library>

            <library name="elemental2-promise">
                <exported-packages>
                    <package>elemental2.promise</package>
                </exported-packages>
            </library>

        </group>

        <group>
            <groupId>org.jresearch.gwt.time</groupId>

            <library name="gwt-time">
                <artifactId>org.jresearch.gwt.time</artifactId>
            </library>

            <library name="org.jresearch.gwt.time.tzdb"/>

        </group>

        <library name="java-nio-emul">
            <groupId>org.treblereel.gwt.nio</groupId>
            <artifactId>gwt-nio</artifactId>
            <version>1.1</version>
            <exported-packages>
                <package>java.nio</package>
                <package>java.nio.charset</package>
                <package>java.nio.file</package>
                <package>java.nio.file.attribute</package>
            </exported-packages>
        </library>

        <library name="jsinterop-annotations">
            <exported-packages>
                <package>jsinterop.annotations</package>
            </exported-packages>
        </library>

        <library name="jsinterop-base">
            <exported-packages>
                <package>jsinterop.base</package>
            </exported-packages>
        </library>

        <library name="com-zaxxer-hikari">
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <exported-packages>
                <package>com.zaxxer.hikari</package>
            </exported-packages>
        </library>

        <library name="Java-WebSocket">
            <groupId>org.java-websocket</groupId>
            <exported-packages>
                <package>org.java_websocket</package>
                <package>org.java_websocket.client</package>
                <package>org.java_websocket.drafts</package>
                <package>org.java_websocket.enums</package>
                <package>org.java_websocket.handshake</package>
            </exported-packages>
        </library>

        <group>
            <groupId>org.teavm</groupId>

            <library name="teavm-interop">
                <exported-packages>
                    <package>org.teavm.interop</package>
                </exported-packages>
            </library>

            <library name="teavm-jso">
                <exported-packages>
                    <package>org.teavm.jso</package>
                </exported-packages>
            </library>

            <library name="teavm-jso-apis">
                <exported-packages>
                    <package>org.teavm.jso.core</package>
                    <package>org.teavm.jso.dom.events</package>
                    <package>org.teavm.jso.typedarrays</package>
                </exported-packages>
            </library>

        </group>

        <group>
            <groupId>io.vertx</groupId>

            <library name="io-vertx-core">
                <artifactId>vertx-core</artifactId>
                <exported-packages>
                    <package>io.vertx.core</package>
                    <package>io.vertx.core.eventbus</package>
                    <package>io.vertx.core.eventbus.impl</package>
                    <package>io.vertx.core.http</package>
                    <package>io.vertx.core.http.impl.headers</package>
                    <package>io.vertx.core.json</package>
                    <package>io.vertx.core.net</package>
                    <package>io.vertx.core.spi.cluster</package>
                </exported-packages>
            </library>

            <library name="io-vertx-eventbusbridge-common">
                <artifactId>vertx-bridge-common</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.bridge</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-jdbc">
                <artifactId>vertx-jdbc-client</artifactId>
                <exported-packages>
                    <package>io.vertx.jdbcclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql">
                <artifactId>vertx-sql-client</artifactId>
                <exported-packages>
                    <package>io.vertx.sqlclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-client-sql-pg">
                <artifactId>vertx-pg-client</artifactId>
                <exported-packages>
                    <package>io.vertx.pgclient</package>
                </exported-packages>
            </library>

            <library name="io-vertx-web">
                <artifactId>vertx-web</artifactId>
                <exported-packages>
                    <package>io.vertx.ext.web</package>
                    <package>io.vertx.ext.web.handler</package>
                    <package>io.vertx.ext.web.handler.sockjs</package>
                    <package>io.vertx.ext.web.sstore</package>
                </exported-packages>
            </library>

        </group>

        <!-- Additional library required at runtime when authenticating to a postgres database in a docker container -->
        <library name="com-ongres-scram-client">
            <artifactId>client</artifactId>
            <groupId>com.ongres.scram</groupId>
        </library>

    </required-libraries>

    <!--

     ******************************************************************************************************************* 
     ******************************* Section managed by WebFX (DO NOT EDIT MANUALLY) *********************************** 
     ******************************************************************************************************************* 

     <export-snapshot> allows a much faster import of this WebFX library into another project. It's a self-contained
     image of this and children modules. All information required for the import of this library is present in this
     single file. The export snapshot is optional, and a WebFX library that doesn't generate it can still be imported
     into another project, but WebFX will then need to download all individual webfx.xml files for every children
     modules, together with their pom and sources. Knowing that each download requires a maven invocation that takes
     at least 3s (sometimes 10s or more), the export snapshot brings a significant performance improvement in the
     import process.

     -->

    <export-snapshot>

        <project name="webfx-platform">

            <modules>
                <module>webfx-platform-async</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-boot-gwt</module>
                <module>webfx-platform-boot-java</module>
                <module>webfx-platform-boot-vertx</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-console-gwt</module>
                <module>webfx-platform-console-java</module>
                <module>webfx-platform-fetch</module>
                <module>webfx-platform-fetch-gwt</module>
                <module>webfx-platform-fetch-java</module>
                <module>webfx-platform-fetch-vertx</module>
                <module>webfx-platform-file</module>
                <module>webfx-platform-file-gwt</module>
                <module>webfx-platform-file-java</module>
                <module>webfx-platform-javabase-emul-gwt</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-json-gwt</module>
                <module>webfx-platform-json-java</module>
                <module>webfx-platform-json-teavm</module>
                <module>webfx-platform-json-vertx</module>
                <module>webfx-platform-resource</module>
                <module>webfx-platform-resource-gwt</module>
                <module>webfx-platform-resource-java</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-scheduler-java</module>
                <module>webfx-platform-scheduler-vertx</module>
                <module>webfx-platform-shutdown</module>
                <module>webfx-platform-shutdown-gwt</module>
                <module>webfx-platform-shutdown-java</module>
                <module>webfx-platform-storage</module>
                <module>webfx-platform-storage-gwt</module>
                <module>webfx-platform-storage-java</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-uischeduler-gwt</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-vertx-common</module>
                <module>webfx-platform-webassembly</module>
                <module>webfx-platform-webassembly-teavm</module>
                <module>webfx-platform-webworker</module>
                <module>webfx-platform-webworker-gwt</module>
                <module>webfx-platform-webworker-java</module>
                <module>webfx-platform-webworker-teavm</module>
                <module>webfx-platform-windowhistory</module>
                <module>webfx-platform-windowhistory-gwt</module>
                <module>webfx-platform-windowhistory-java</module>
                <module>webfx-platform-windowhistory-web</module>
                <module>webfx-platform-windowlocation</module>
                <module>webfx-platform-windowlocation-gwt</module>
                <module>webfx-platform-windowlocation-java</module>
            </modules>

            <required-libraries>

                <group>
                    <groupId>dev.webfx</groupId>
                    <version>0.1.0-SNAPSHOT</version>

                    <webfx-library name="webfx-parent"/>
                    <webfx-library name="webfx-lib-javacupruntime"/>
                </group>


                <group>
                    <groupId>org.gwtproject</groupId>

                    <library name="gwt-user">
                        <exported-packages>
                            <package>com.google.gwt.core.client</package>
                            <package>com.google.gwt.dom.client</package>
                            <package>com.google.gwt.media.client</package>
                            <package>com.google.gwt.regexp.shared</package>
                            <package>com.google.gwt.resources.client</package>
                            <package>com.google.gwt.storage.client</package>
                            <package>com.google.gwt.user.client</package>
                            <package>com.google.gwt.user.client.ui</package>
                        </exported-packages>
                    </library>

                    <library name="gwt-dev"/>
                </group>

                <group>
                    <groupId>com.google.elemental2</groupId>

                    <library name="elemental2-core">
                        <exported-packages>
                            <package>elemental2.core</package>
                        </exported-packages>
                    </library>

                    <library name="elemental2-dom">
                        <exported-packages>
                            <package>elemental2.dom</package>
                        </exported-packages>
                    </library>

                    <library name="elemental2-svg">
                        <exported-packages>
                            <package>elemental2.svg</package>
                        </exported-packages>
                    </library>

                    <library name="elemental2-media">
                        <exported-packages>
                            <package>elemental2.media</package>
                        </exported-packages>
                    </library>

                    <library name="elemental2-promise">
                        <exported-packages>
                            <package>elemental2.promise</package>
                        </exported-packages>
                    </library>

                </group>

                <group>
                    <groupId>org.jresearch.gwt.time</groupId>

                    <library name="gwt-time">
                        <artifactId>org.jresearch.gwt.time</artifactId>
                    </library>

                    <library name="org.jresearch.gwt.time.tzdb"/>

                </group>

                <library name="java-nio-emul">
                    <groupId>org.treblereel.gwt.nio</groupId>
                    <artifactId>gwt-nio</artifactId>
                    <version>1.1</version>
                    <exported-packages>
                        <package>java.nio</package>
                        <package>java.nio.charset</package>
                        <package>java.nio.file</package>
                        <package>java.nio.file.attribute</package>
                    </exported-packages>
                </library>

                <library name="jsinterop-annotations">
                    <exported-packages>
                        <package>jsinterop.annotations</package>
                    </exported-packages>
                </library>

                <library name="jsinterop-base">
                    <exported-packages>
                        <package>jsinterop.base</package>
                    </exported-packages>
                </library>

                <library name="com-zaxxer-hikari">
                    <groupId>com.zaxxer</groupId>
                    <artifactId>HikariCP</artifactId>
                    <exported-packages>
                        <package>com.zaxxer.hikari</package>
                    </exported-packages>
                </library>

                <library name="Java-WebSocket">
                    <groupId>org.java-websocket</groupId>
                    <exported-packages>
                        <package>org.java_websocket</package>
                        <package>org.java_websocket.client</package>
                        <package>org.java_websocket.drafts</package>
                        <package>org.java_websocket.enums</package>
                        <package>org.java_websocket.handshake</package>
                    </exported-packages>
                </library>

                <group>
                    <groupId>org.teavm</groupId>

                    <library name="teavm-interop">
                        <exported-packages>
                            <package>org.teavm.interop</package>
                        </exported-packages>
                    </library>

                    <library name="teavm-jso">
                        <exported-packages>
                            <package>org.teavm.jso</package>
                        </exported-packages>
                    </library>

                    <library name="teavm-jso-apis">
                        <exported-packages>
                            <package>org.teavm.jso.core</package>
                            <package>org.teavm.jso.dom.events</package>
                            <package>org.teavm.jso.typedarrays</package>
                        </exported-packages>
                    </library>

                </group>

                <group>
                    <groupId>io.vertx</groupId>

                    <library name="io-vertx-core">
                        <artifactId>vertx-core</artifactId>
                        <exported-packages>
                            <package>io.vertx.core</package>
                            <package>io.vertx.core.eventbus</package>
                            <package>io.vertx.core.eventbus.impl</package>
                            <package>io.vertx.core.http</package>
                            <package>io.vertx.core.http.impl.headers</package>
                            <package>io.vertx.core.json</package>
                            <package>io.vertx.core.net</package>
                            <package>io.vertx.core.spi.cluster</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-eventbusbridge-common">
                        <artifactId>vertx-bridge-common</artifactId>
                        <exported-packages>
                            <package>io.vertx.ext.bridge</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-jdbc">
                        <artifactId>vertx-jdbc-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.jdbcclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-sql">
                        <artifactId>vertx-sql-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.sqlclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-client-sql-pg">
                        <artifactId>vertx-pg-client</artifactId>
                        <exported-packages>
                            <package>io.vertx.pgclient</package>
                        </exported-packages>
                    </library>

                    <library name="io-vertx-web">
                        <artifactId>vertx-web</artifactId>
                        <exported-packages>
                            <package>io.vertx.ext.web</package>
                            <package>io.vertx.ext.web.handler</package>
                            <package>io.vertx.ext.web.handler.sockjs</package>
                            <package>io.vertx.ext.web.sstore</package>
                        </exported-packages>
                    </library>

                </group>

                <!-- Additional library required at runtime when authenticating to a postgres database in a docker container -->
                <library name="com-ongres-scram-client">
                    <artifactId>client</artifactId>
                    <groupId>com.ongres.scram</groupId>
                </library>

            </required-libraries>

        </project>

        <project name="webfx-platform-async">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.async</package>
                <package>dev.webfx.platform.async.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>java.logging</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-boot">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.platform.boot.spi.impl.ApplicationJobsBooter</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.boot</package>
                <package>dev.webfx.platform.boot.spi</package>
                <package>dev.webfx.platform.boot.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-shutdown</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.boot.spi.ApplicationBooterProvider</required-service>
                <optional-service>dev.webfx.platform.boot.spi.ApplicationModuleBooter</optional-service>
                <optional-service>dev.webfx.platform.boot.spi.ApplicationJob</optional-service>
            </used-services>

        </project>

        <project name="webfx-platform-boot-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationBooterProvider">dev.webfx.platform.boot.spi.impl.gwt.GwtApplicationBooterProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.platform.boot.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>webfx-platform-boot</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-boot-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationBooterProvider">dev.webfx.platform.boot.spi.impl.java.JavaApplicationBooterProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.boot.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-boot</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-boot-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationBooterProvider">dev.webfx.platform.boot.spi.impl.vertx.VertxApplicationBooterVerticle</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.boot.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>io-vertx-eventbusbridge-common</module>
                <module>io-vertx-web</module>
                <module>java-nio-emul</module>
                <module>java.base</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-shutdown</module>
                <module>webfx-platform-vertx-common</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-console">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.console</package>
                <package>dev.webfx.platform.console.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.console.spi.ConsoleProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-console-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.console.spi.ConsoleProvider">dev.webfx.platform.console.spi.impl.gwt.GwtConsoleProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.console.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-console</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-console-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.console.spi.ConsoleProvider">dev.webfx.platform.console.spi.impl.java.JavaConsoleProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.console.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-console</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-fetch">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                    <module transitive="true">webfx-platform-json</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.fetch</package>
                <package>dev.webfx.platform.fetch.spi</package>
                <package>dev.webfx.platform.streams</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-file</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.fetch.spi.FetchProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-fetch-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.fetch.spi.FetchProvider">dev.webfx.platform.fetch.spi.impl.gwt.GwtFetchProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.platform.fetch.spi.impl.gwt</package>
                <package>dev.webfx.platform.streams.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>elemental2-core</module>
                <module>elemental2-dom</module>
                <module>elemental2-promise</module>
                <module>gwt-user</module>
                <module>java.base</module>
                <module>jsinterop-base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-fetch</module>
                <module>webfx-platform-file</module>
                <module>webfx-platform-file-gwt</module>
                <module>webfx-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-fetch-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.fetch.spi.FetchProvider">dev.webfx.platform.fetch.spi.impl.java.JavaFetchProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.platform.fetch.spi.impl.java</package>
                <package>dev.webfx.platform.streams.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>java.net.http</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-fetch</module>
                <module>webfx-platform-file</module>
                <module>webfx-platform-file-java</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-scheduler-java</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-fetch-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <providers>
                <provider interface="dev.webfx.platform.fetch.spi.FetchProvider">dev.webfx.platform.fetch.spi.impl.vertx.VertxFetchProvider</provider>
            </providers>

            <source-packages>
                <package>dev.webfx.platform.fetch.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-fetch</module>
                <module>webfx-platform-file</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-vertx-common</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-file">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
     </providers>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-async</module>
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.file</package>
                <package>dev.webfx.platform.file.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.file.spi.FileProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-file-gwt">

            <providers>
                <provider interface="dev.webfx.platform.file.spi.FileProvider">dev.webfx.platform.file.spi.impl.gwt.GwtFileProvider</provider>
            </providers>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.file.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>elemental2-core</module>
                <module>elemental2-dom</module>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-file</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-file-java">

            <providers>
                <provider interface="dev.webfx.platform.file.spi.FileProvider">dev.webfx.platform.file.spi.impl.java.JavaFileProvider</provider>
            </providers>

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.file.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java-nio-emul</module>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-file</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-javabase-emul-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <html if-uses-java-package="java.util.regex">
                <body order="-1">
                    <script charset="utf-8" src="emul/java/util/regex/xregexp.js" type="text/javascript"/>
                </body>
            </html>

            <source-packages>
                <package>emul.java.lang.ref</package>
                <package>emul.java.util</package>
                <package>emul.java.util.regex</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>java.base</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-json">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules>
                    <module transitive="true">webfx-platform-util</module>                    <!-- for use of dev.webfx.platform.util.noreflect.* -->
                </used-by-source-modules>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.json</package>
                <package>dev.webfx.platform.json.parser</package>
                <package>dev.webfx.platform.json.parser.javacup</package>
                <package>dev.webfx.platform.json.parser.jflex</package>
                <package>dev.webfx.platform.json.spi</package>
                <package>dev.webfx.platform.json.spi.impl.listmap</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-lib-javacupruntime</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.json.spi.JsonProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-json-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.json.spi.JsonProvider">dev.webfx.platform.json.spi.impl.gwt.GwtJsonObject</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.json.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>webfx-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-json-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.json.spi.JsonProvider">dev.webfx.platform.json.spi.impl.java.JavaJsonProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.json.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-json-teavm">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.json.spi.JsonProvider">dev.webfx.platform.json.spi.impl.teavm.TeaVmJsonObject</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.json.spi.impl.teavm</package>
            </source-packages>

            <used-by-source-modules>
                <module>teavm-jso</module>
                <module>teavm-jso-apis</module>
                <module>webfx-platform-json</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-json-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.json.spi.JsonProvider">dev.webfx.platform.json.spi.impl.vertx.VertxJsonObject</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.json.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>java.base</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-resource">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.resource</package>
                <package>dev.webfx.platform.resource.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.resource.spi.ResourceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-resource-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.boot.spi.ApplicationModuleBooter">dev.webfx.platform.resource.spi.impl.gwt.GwtResourceModuleBooter</provider>
                <provider interface="dev.webfx.platform.resource.spi.ResourceProvider">dev.webfx.platform.resource.spi.impl.gwt.GwtResourceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.resource.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>java.base</module>
                <module>webfx-platform-boot</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-resource</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <optional-service>dev.webfx.platform.resource.spi.impl.gwt.GwtResourceBundle</optional-service>
            </used-services>

        </project>

        <project name="webfx-platform-resource-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.resource.spi.ResourceProvider">dev.webfx.platform.resource.spi.impl.java.JavaResourceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.resource.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-resource</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-scheduler">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.scheduler</package>
                <package>dev.webfx.platform.scheduler.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.scheduler.spi.SchedulerProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-scheduler-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.scheduler.spi.SchedulerProvider">dev.webfx.platform.scheduler.spi.impl.java.JavaSchedulerProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.scheduler.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-scheduler</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-scheduler-vertx">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.scheduler.spi.SchedulerProvider">dev.webfx.platform.scheduler.spi.impl.vertx.VertxSchedulerProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.scheduler.spi.impl.vertx</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-vertx-common</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-shutdown">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.shutdown</package>
                <package>dev.webfx.platform.shutdown.spi</package>
                <package>dev.webfx.platform.shutdown.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.shutdown.spi.ShutdownProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-shutdown-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shutdown.spi.ShutdownProvider">dev.webfx.platform.shutdown.spi.impl.gwt.GwtShutdownProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.shutdown.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>elemental2-dom</module>
                <module>webfx-platform-shutdown</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-shutdown-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.shutdown.spi.ShutdownProvider">dev.webfx.platform.shutdown.spi.impl.java.JavaShutdownProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.shutdown.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-shutdown</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-storage">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.storage</package>
                <package>dev.webfx.platform.storage.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.storage.spi.LocalStorageProvider</required-service>
                <required-service>dev.webfx.platform.storage.spi.SessionStorageProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-storage-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.storage.spi.LocalStorageProvider">dev.webfx.platform.storage.spi.impl.gwt.GwtLocalStorageProvider</provider>
                <provider interface="dev.webfx.platform.storage.spi.SessionStorageProvider">dev.webfx.platform.storage.spi.impl.gwt.GwtSessionStorageProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.storage.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>java.base</module>
                <module>webfx-platform-storage</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-storage-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.storage.spi.LocalStorageProvider">dev.webfx.platform.storage.spi.impl.java.JavaLocalStorageProvider</provider>
                <provider interface="dev.webfx.platform.storage.spi.SessionStorageProvider">dev.webfx.platform.storage.spi.impl.java.JavaSessionStorageProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.storage.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-storage</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-uischeduler">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.uischeduler</package>
                <package>dev.webfx.platform.uischeduler.spi</package>
                <package>dev.webfx.platform.uischeduler.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.uischeduler.spi.UiSchedulerProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-uischeduler-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.scheduler.spi.SchedulerProvider">dev.webfx.platform.uischeduler.spi.impl.gwt.GwtUiSchedulerProvider</provider>
                <provider interface="dev.webfx.platform.uischeduler.spi.UiSchedulerProvider">dev.webfx.platform.uischeduler.spi.impl.gwt.GwtUiSchedulerProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.uischeduler.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>elemental2-dom</module>
                <module>gwt-user</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-scheduler</module>
                <module>webfx-platform-uischeduler</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-util">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.util</package>
                <package>dev.webfx.platform.util.collection</package>
                <package>dev.webfx.platform.util.function</package>
                <package>dev.webfx.platform.util.noreflect</package>
                <package>dev.webfx.platform.util.serviceloader</package>
                <package>dev.webfx.platform.util.tuples</package>
                <package>dev.webfx.platform.util.uuid</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>java.logging</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-vertx-common">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
                <plugin-module>org.slf4j.jul</plugin-module>
            </dependencies>

            <required-libraries>
                <library name="org.slf4j.jul">
                    <artifactId>slf4j-jdk14</artifactId>
                    <groupId>org.slf4j</groupId>
                    <version>1.7.36</version>
        
                    <exported-packages>
                        <package>org.slf4j.impl</package>
                    </exported-packages>

                </library>
            </required-libraries>

            <source-packages>
                <package>dev.webfx.platform.vertx.common</package>
            </source-packages>

            <used-by-source-modules>
                <module>io-vertx-core</module>
                <module>io-vertx-web</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-webassembly">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.webassembly</package>
                <package>dev.webfx.platform.webassembly.spi</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.webassembly.spi.WebAssemblyProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-webassembly-teavm">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.webassembly.spi.WebAssemblyProvider">dev.webfx.platform.webassembly.spi.impl.teavm.TeaVmWebAssemblyProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.webassembly.spi.impl.teavm</package>
                <package>dev.webfx.platform.webassembly.spi.impl.teavm.wasm</package>
            </source-packages>

            <used-by-source-modules>
                <module>java-nio-emul</module>
                <module>teavm-interop</module>
                <module>teavm-jso</module>
                <module>teavm-jso-apis</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-webassembly</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-webworker">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.webworker</package>
                <package>dev.webfx.platform.webworker.pool</package>
                <package>dev.webfx.platform.webworker.spi</package>
                <package>dev.webfx.platform.webworker.spi.base</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.webworker.spi.WorkerServiceProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-webworker-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.webworker.spi.WorkerServiceProvider">dev.webfx.platform.webworker.spi.impl.gwt.GwtWorkerServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.webworker.spi.impl.gwt</package>
            </source-packages>

            <used-by-source-modules>
                <module>elemental2-dom</module>
                <module>java.base</module>
                <module>webfx-platform-webworker</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-webworker-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.webworker.spi.WorkerServiceProvider">dev.webfx.platform.webworker.spi.impl.java.JavaWorkerServiceProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.webworker.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-console</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-webworker</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-webworker-teavm">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.webworker.spi.impl.teavm</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>teavm-interop</module>
                <module>teavm-jso</module>
                <module>teavm-jso-apis</module>
                <module>webfx-platform-webworker</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-windowhistory">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.windowhistory</package>
                <package>dev.webfx.platform.windowhistory.spi</package>
                <package>dev.webfx.platform.windowhistory.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-windowlocation</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.windowhistory.spi.WindowHistoryProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-windowhistory-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.windowhistory.spi.impl.web.JsWindowHistory">dev.webfx.platform.windowhistory.spi.impl.gwt.GwtJsWindowHistory</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.windowhistory.spi.impl.gwt</package>
                <package>dev.webfx.platform.windowhistory.spi.impl.gwt.jsinterop</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>java.base</module>
                <module>jsinterop-annotations</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-json-gwt</module>
                <module>webfx-platform-windowhistory-web</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-windowhistory-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.windowhistory.spi.WindowHistoryProvider">dev.webfx.platform.windowhistory.spi.impl.java.JavaWindowHistoryProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.windowhistory.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-windowhistory</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-windowhistory-web">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.windowhistory.spi.WindowHistoryProvider">dev.webfx.platform.windowhistory.spi.impl.web.WebWindowHistoryProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.windowhistory.spi.impl.web</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-async</module>
                <module>webfx-platform-json</module>
                <module>webfx-platform-uischeduler</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-windowhistory</module>
                <module>webfx-platform-windowlocation</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.windowhistory.spi.impl.web.JsWindowHistory</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-windowlocation">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.windowlocation</package>
                <package>dev.webfx.platform.windowlocation.spi</package>
                <package>dev.webfx.platform.windowlocation.spi.impl</package>
            </source-packages>

            <used-by-source-modules>
                <module>java.base</module>
                <module>webfx-platform-util</module>
            </used-by-source-modules>

            <used-services>
                <required-service>dev.webfx.platform.windowlocation.spi.WindowLocationProvider</required-service>
            </used-services>

        </project>

        <project name="webfx-platform-windowlocation-gwt">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.windowlocation.spi.WindowLocationProvider">dev.webfx.platform.windowlocation.spi.impl.gwt.GwtWindowLocationProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.windowlocation.spi.impl.gwt</package>
                <package>dev.webfx.platform.windowlocation.spi.impl.gwt.jsinterop</package>
            </source-packages>

            <used-by-source-modules>
                <module>gwt-user</module>
                <module>jsinterop-annotations</module>
                <module>webfx-platform-util</module>
                <module>webfx-platform-windowlocation</module>
            </used-by-source-modules>

        </project>

        <project name="webfx-platform-windowlocation-java">

            <exported-packages>
                <source-packages/>
            </exported-packages>

            <providers>
                <provider interface="dev.webfx.platform.windowlocation.spi.WindowLocationProvider">dev.webfx.platform.windowlocation.spi.impl.java.JavaWindowLocationProvider</provider>
            </providers>

            <dependencies>
                <used-by-source-modules/>
            </dependencies>

            <source-packages>
                <package>dev.webfx.platform.windowlocation.spi.impl.java</package>
            </source-packages>

            <used-by-source-modules>
                <module>webfx-platform-windowhistory</module>
                <module>webfx-platform-windowlocation</module>
            </used-by-source-modules>

        </project>

        <usages>

            <java-package name="java.util.regex"/>

        </usages>

    </export-snapshot>

</project>